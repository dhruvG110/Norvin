// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // Change to your DB type
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  password  String
  username  String
  role      Role      @default(USER)
  projects  Project[]
  messages  Message[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Admin     Admin?
  otp       Otp?
  Token     Token?
}

model Otp {
  id     String @id @default(uuid())
  Otp    String @unique
  userId String @unique
  user   User   @relation(fields: [userId], references: [id])
}

model Token {
  id     String @id @default(uuid())
  userId String @unique
  user   User   @relation(fields: [userId], references: [id])
  token  String @unique
}

model Admin {
  id              String    @id @default(uuid())
  userId          String    @unique
  user            User      @relation(fields: [userId], references: [id])
  managedProjects Project[]
}

model Project {
  id          String  @id @default(uuid())
  name        String
  description String?

  members   User[]
  messages  Message[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Admin     Admin?    @relation(fields: [adminId], references: [id])
  adminId   String?
}

model Message {
  id        String   @id @default(uuid())
  content   String
  senderId  String
  sender    User     @relation(fields: [senderId], references: [id])
  projectId String?
  project   Project? @relation(fields: [projectId], references: [id])
  createdAt DateTime @default(now())
}

enum Role {
  USER
  ADMIN
}
